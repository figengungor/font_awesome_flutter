import 'dart:convert';
import 'dart:io';

void main(List<String> arguments) {
  var file = new File(arguments.first);

  if (!file.existsSync()) {
    print('Cannot find the file "${arguments.first}".');
  }

  var content = file.readAsStringSync();
  Map<String, dynamic> icons = json.decode(content);

  Map<String, String> iconDefinitions = {};

  for (String iconName in icons.keys) {
    var icon = icons[iconName];
    var unicode = icon['unicode'];
    List<String> styles = (icon['styles'] as List).cast<String>();


    //solid, regular, brands

    for (String style in styles) {

      String stylePrefix = getStylePrefix(style);

      if(stylePrefix!=null) {
        String key = '$stylePrefix fa-$iconName';
        iconDefinitions.putIfAbsent(
          key,
              () =>
              generateIconDefinition(
                key,
                styles.first,
                unicode,
              ),
        );
      }
    }
  }

  List<String> generatedOutput = [
    'library font_awesome_flutter_original;',
    '',
    "import 'package:flutter/widgets.dart';",
    "import 'package:font_awesome_flutter/font_awesome_flutter.dart';",
    "import 'package:font_awesome_flutter/icon_data.dart';",
    '',
    '// THIS FILE IS AUTOMATICALLY GENERATED!',
    '',
    'class FontAwesomeIconsOriginal {',
    '  static const Map<String, IconData> icons = {',
  ];

  generatedOutput.addAll(iconDefinitions.values);

  generatedOutput.addAll([
    "};",
    "",
    "  static IconData byName(String originalName) {",
    "    final icon = icons[originalName];",
    "",
    "    if (icon == null) {",
    "      throw new ArgumentError(",
    "        'The following icon was not found: \$originalName',",
    "      );",
    "    }",
    "    return icon;",
    "  }",
    "",
    "  static IconData withFallback(",
    "    String originalName, {"
        "    IconData fallback = FontAwesomeIcons.question,"
        "  }) =>"
        "      icons[originalName] ?? fallback;"
        "}",
    "",
  ]);

  File output = new File('lib/font_awesome_flutter_original.dart');
  output.writeAsStringSync(generatedOutput.join('\n'));
}

String generateIconDefinition(String iconName, String style, String unicode) {
  style = '${style[0].toUpperCase()}${style.substring(1)}';

  String iconDataSource = 'IconData$style';

  return "'$iconName': $iconDataSource(0x$unicode),";
}

String getStylePrefix(String style){
  switch(style) {
    case 'solid': return 'fas';
    case 'regular': return 'far';
    case 'brands': return 'fab';
    default: return null;
  }
}
